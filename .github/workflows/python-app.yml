# Building and testing Python
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python CI

permissions:
  contents: read

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  PYTHON_VERSION: 3.13.3

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0

      - name: Lint commit messages
        uses: wagoid/commitlint-github-action@v6.2.1

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v6.0.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install lint dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-lint.txt

      - name: Lint with Flake8
        run: |
          flake8 .

      - name: Check code formatting with Black
        run: |
          black --check .

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v6.0.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt

      - name: Run tests with pytest
        run: |
          pytest -v

      - name: Generate coverage report
        run: |
          pytest --cov=./ --cov-report=xml --cov-report=term

      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: coverage.xml
          path: ./coverage.xml

  coverage:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [codecov, codacy]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0

      - name: Download coverage report artifact
        uses: actions/download-artifact@v5.0.0
        with:
          name: coverage.xml

      - name: Upload coverage report to ${{ matrix.service }}
        if: ${{ matrix.service == 'codecov' }}
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml

      - name: Upload coverage report to ${{ matrix.service }}
        if: ${{ matrix.service == 'codacy' }}
        uses: codacy/codacy-coverage-reporter-action@v1.3.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.xml

  container:
    needs: coverage
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Build and push Docker image to GitHub Container Registry
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          push: true
          platforms: linux/amd64
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:sha-${{ github.sha }}
